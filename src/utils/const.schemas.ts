export const schemas = { FindUserDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, username: { type: 'string', maxLength: 30, minLength: 4 } }, required: ['id', 'createdAt', 'updatedAt', 'username'] }, CreateUserDto: { type: 'object', properties: { username: { type: 'string', maxLength: 30, minLength: 4, example: 'example123' }, password: { type: 'string', maxLength: 30, minLength: 8, example: 'SuperSecure#Password000' } }, required: ['username', 'password'] }, FindActionDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, user: { $ref: '#/components/schemas/FindUserDto' }, actionName: { type: 'string', enum: ['USER_CREATED', 'USER_DELETED'] }, createdAt: { format: 'date-time', type: 'string' } }, required: ['id', 'user', 'actionName', 'createdAt'] }, LoginDto: { type: 'object', properties: { message: { type: 'string' }, success: { type: 'boolean' }, token: { type: 'string' } }, required: ['message', 'success', 'token'] }, SBS: { type: 'object', properties: { reader: { type: 'string' }, oda: { type: 'string' }, imgUrl: { type: 'string' } }, required: ['reader', 'oda'] }, FindVolumeDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, number: { type: 'number', minimum: 1, description: 'number of the volume' }, sbs: { description: 'sbs of the volume', type: 'array', items: { $ref: '#/components/schemas/SBS' } } }, required: ['id', 'createdAt', 'updatedAt', 'number'] }, FindSagaDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, name: { type: 'string', minLength: 2, maxLength: 100, description: 'name of the saga' }, plot: { type: 'string', minLength: 25, maxLength: 1000, description: 'plot of the saga' }, from: { type: 'number', minimum: 1, maximum: 2000, description: 'at wich chapter start the saga' }, to: { type: 'number', minimum: 2, maximum: 2000, description: 'at wich chapter end the saga' }, length: { type: 'number', minimum: 1, maximum: 1000, description: 'count of chapters of the saga' }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' } }, required: ['id', 'name', 'plot', 'from', 'length', 'createdAt', 'updatedAt'] }, FindArcDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, name: { type: 'string', minLength: 2, maxLength: 100, description: 'name of the arc' }, plot: { type: 'string', minLength: 25, maxLength: 1000, description: 'plot of the arc' }, from: { type: 'number', minimum: 1, maximum: 2000, description: 'at wich chapter start the arc' }, to: { type: 'number', minimum: 2, maximum: 2000, description: 'at wich chapter end the arc' }, length: { type: 'number', minimum: 1, maximum: 1000, description: 'count of chapters of the arc' }, saga: { $ref: '#/components/schemas/FindSagaDto' } }, required: ['id', 'createdAt', 'updatedAt', 'name', 'plot', 'from', 'length', 'saga'] }, FindChapterDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, title: { type: 'string', minLength: 2, maxLength: 100, description: 'title of the chapter' }, description: { type: 'string', minLength: 25, maxLength: 1000, description: 'title of the chapter' }, number: { type: 'number', minimum: 0, description: 'number of the chapter' }, pagesCount: { type: 'number', description: 'number of the chapter' }, chapterUrl: { type: 'string', description: 'link to the chapter' }, volume: { $ref: '#/components/schemas/FindVolumeDto' }, arc: { $ref: '#/components/schemas/FindArcDto' } }, required: ['id', 'createdAt', 'updatedAt', 'title', 'description', 'number', 'pagesCount', 'chapterUrl', 'arc'] }, UpdateCommonDto: { type: 'object', properties: { affected: { type: 'number', description: 'Number of entities edited' } } }, CharacterInfo: { type: 'object', properties: { title: { type: 'string' }, description: { type: 'string' } }, required: ['title', 'description'] }, FindHakiDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, name: { type: 'string', minLength: 2, maxLength: 100, description: 'name of the haki' }, description: { type: 'string', minLength: 25, maxLength: 1000, description: 'description of the haki' } }, required: ['id', 'createdAt', 'updatedAt', 'name', 'description'] }, FindAkumaNoMiTypeDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, name: { type: 'string', minLength: 2, maxLength: 100, description: 'name of the akuma no mi type' }, description: { type: 'string', minLength: 25, maxLength: 1000, description: 'description of the akuma no mi type' } }, required: ['id', 'createdAt', 'updatedAt', 'name', 'description'] }, FindAkumaNoMiDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, name: { type: 'string', minLength: 2, maxLength: 100, description: 'name of the akuma no mi' }, description: { type: 'string', minLength: 25, maxLength: 1000, description: 'description of the akuma no mi' }, type: { $ref: '#/components/schemas/FindAkumaNoMiTypeDto' } }, required: ['id', 'createdAt', 'updatedAt', 'name', 'description', 'type'] }, FindRaceDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, name: { type: 'string', minLength: 2, maxLength: 100, description: 'name of the race' }, description: { type: 'string', minLength: 25, maxLength: 1000, description: 'description of the race' } }, required: ['id', 'createdAt', 'updatedAt', 'name', 'description'] }, FindGroupDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, name: { type: 'string', minLength: 2, maxLength: 100, description: 'name of the group' }, description: { type: 'string', minLength: 25, maxLength: 1000, description: 'description of the group' } }, required: ['id', 'createdAt', 'updatedAt', 'name', 'description'] }, FindOrganizationDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, name: { type: 'string', minLength: 2, maxLength: 100, description: 'name of the organization' }, description: { type: 'string', minLength: 25, maxLength: 1000, description: 'description of the organization' }, group: { $ref: '#/components/schemas/FindGroupDto' } }, required: ['id', 'createdAt', 'updatedAt', 'name', 'description', 'group'] }, FindOccupationDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, name: { type: 'string', minLength: 2, maxLength: 100, description: 'name of the occupation' }, description: { type: 'string', minLength: 25, maxLength: 1000, description: 'description of the occupation' }, organization: { $ref: '#/components/schemas/FindOrganizationDto' } }, required: ['id', 'createdAt', 'updatedAt', 'name', 'description', 'organization'] }, FindCharacterTypeDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, name: { type: 'string', minLength: 2, maxLength: 100, description: 'name of the character-type' }, description: { type: 'string', minLength: 25, maxLength: 1000, description: 'description of the character-type' } }, required: ['id', 'createdAt', 'updatedAt', 'name', 'description'] }, FindRegionDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, name: { type: 'string', minLength: 2, maxLength: 100, description: 'name of the region' } }, required: ['id', 'createdAt', 'updatedAt', 'name'] }, FindNationalityDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, name: { type: 'string', minLength: 2, maxLength: 100, description: 'name of the organization' }, description: { type: 'string', minLength: 25, maxLength: 1000, description: 'description of the organization' }, region: { $ref: '#/components/schemas/FindRegionDto' } }, required: ['id', 'createdAt', 'updatedAt', 'name', 'description', 'region'] }, FindCharacterDto: { type: 'object', properties: { id: { type: 'number', minimum: 1 }, createdAt: { format: 'date-time', type: 'string' }, updatedAt: { format: 'date-time', type: 'string' }, firstName: { type: 'string', minLength: 1, maxLength: 100, description: 'first name of the character' }, lastNames: { description: 'list of last names of the character', type: 'array', items: { type: 'array' } }, nickName: { type: 'string', minLength: 1, maxLength: 100, description: 'nickname of the character' }, age: { type: 'string', minLength: 2, maxLength: 5, description: 'age of the character' }, height: { type: 'number', minLength: 2, maxLength: 5, description: 'height in cm of the character' }, birthDate: { type: 'string', minLength: 2, maxLength: 5, description: 'height in cm of the character' }, debutInfo: { type: 'string', minLength: 10, maxLength: 1000, description: 'info about the debut of the character' }, wikiUrl: { type: 'string', maxLength: 100, description: 'link of the character section on the one piece wiki' }, avatarUrl: { type: 'string', maxLength: 100, description: "link of the character's avatar image" }, moreInfo: { description: 'more info about the character', type: 'array', items: { $ref: '#/components/schemas/CharacterInfo' } }, hakis: { type: 'array', items: { $ref: '#/components/schemas/FindHakiDto' } }, akumaNoMis: { type: 'array', items: { $ref: '#/components/schemas/FindAkumaNoMiDto' } }, races: { type: 'array', items: { $ref: '#/components/schemas/FindRaceDto' } }, occupation: { $ref: '#/components/schemas/FindOccupationDto' }, type: { $ref: '#/components/schemas/FindCharacterTypeDto' }, nationality: { $ref: '#/components/schemas/FindNationalityDto' }, debut: { $ref: '#/components/schemas/FindChapterDto' } }, required: ['id', 'createdAt', 'updatedAt'] } }
